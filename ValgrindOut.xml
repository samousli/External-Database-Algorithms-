<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/avail/workspace/DBI/DBI/bin/Release/DBI </line>
</preamble>

<pid>19180</pid>
<ppid>11045</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--suppressions=/usr/lib/valgrind/debian-libc6-dbg.supp</arg>
    <arg>--leak-check=full</arg>
    <arg>--track-origins=yes</arg>
    <arg>--show-reachable=yes</arg>
    <arg>--xml=yes</arg>
    <arg>--xml-file=/home/avail/workspace/DBI/DBI/ValgrindOut.xml</arg>
  </vargv>
  <argv>
    <exe>/home/avail/workspace/DBI/DBI/bin/Release/DBI</exe>
    <arg></arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.062 </time>
</status>

<error>
  <unique>0x0</unique>
  <tid>1</tid>
  <kind>SyscallParam</kind>
  <what>Syscall param writev(vector[...]) points to uninitialised byte(s)</what>
  <stack>
    <frame>
      <ip>0x4267A8E</ip>
      <obj>/lib/i386-linux-gnu/libc-2.15.so</obj>
      <fn>writev</fn>
      <dir>/build/buildd/eglibc-2.15/misc/../sysdeps/unix/sysv/linux</dir>
      <file>writev.c</file>
      <line>51</line>
    </frame>
    <frame>
      <ip>0x40B6CF1</ip>
      <obj>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.18</obj>
      <fn>std::__basic_file&lt;char&gt;::xsputn_2(char const*, int, char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x40F2A3F</ip>
      <obj>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.18</obj>
      <fn>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0x40D1FED</ip>
      <obj>/usr/lib/i386-linux-gnu/libstdc++.so.6.0.18</obj>
      <fn>std::ostream::write(char const*, int)</fn>
    </frame>
    <frame>
      <ip>0xBECD6407</ip>
    </frame>
    <frame>
      <ip>0x8C04033F</ip>
    </frame>
  </stack>
  <auxwhat>Address 0xbecd2ff6 is on thread 1's stack</auxwhat>
  <auxwhat>Uninitialised value was created by a stack allocation</auxwhat>
  <stack>
    <frame>
      <ip>0x804D989</ip>
      <obj>/home/avail/workspace/DBI/DBI/bin/Release/DBI</obj>
      <fn>create_test_file(char*, unsigned int)</fn>
      <dir>/home/avail/workspace/DBI/DBI</dir>
      <file>Tests.cpp</file>
      <line>65</line>
    </frame>
  </stack>
</error>


<status>
  <state>FINISHED</state>
  <time>00:00:00:10.224 </time>
</status>

<errorcounts>
  <pair>
    <count>80</count>
    <unique>0x0</unique>
  </pair>
</errorcounts>

<suppcounts>
</suppcounts>

</valgrindoutput>

